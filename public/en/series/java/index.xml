<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Justin Napolitano</title>
    <link>//localhost:1313/en/series/java/</link>
    <description>Recent content in Java on Justin Napolitano</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>personal.jnapolitano@gmail.com (Justin Napolitano)</managingEditor>
    <webMaster>personal.jnapolitano@gmail.com (Justin Napolitano)</webMaster>
    <copyright>jayburdindustries</copyright>
    <lastBuildDate>Wed, 31 Jul 2024 15:48:03 -0500</lastBuildDate>
    <atom:link href="//localhost:1313/en/series/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PostGreSQL Java</title>
      <link>//localhost:1313/en/posts/sup-court-postgres-post/</link>
      <pubDate>Wed, 31 Jul 2024 15:25:13 -0500</pubDate><author>personal.jnapolitano@gmail.com (Justin Napolitano)</author>
      <guid>//localhost:1313/en/posts/sup-court-postgres-post/</guid>
      <description>How to Set Up a PostgreSQL Database and Tables Using Java and Maven I&amp;rsquo;ve been working on this supreme court case thing. I recently played with DataShare to see if I could use something out of the box for some analysis. It was an okay tool&amp;hellip; but not really powerful enough for my use case. I want to create automated workflows at some scale and build out applications that are more versatile.</description>
    </item>
  </channel>
</rss>
