<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Justin Napolitano</title>
    <link>jnapolitano.com/en/tags/docker/</link>
    <description>Recent content in Docker on Justin Napolitano</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>personal.jnapolitano@gmail.com (Justin Napolitano)</managingEditor>
    <webMaster>personal.jnapolitano@gmail.com (Justin Napolitano)</webMaster>
    <copyright>COBRACORP</copyright>
    <lastBuildDate>Mon, 29 Jul 2024 18:33:58 -0500</lastBuildDate>
    <atom:link href="jnapolitano.com/en/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DataShare &#43; Docker Compose</title>
      <link>jnapolitano.com/en/posts/sup-court-graph/docker_compose_blog/</link>
      <pubDate>Mon, 29 Jul 2024 16:12:27 -0500</pubDate><author>personal.jnapolitano@gmail.com (Justin Napolitano)</author>
      <guid>jnapolitano.com/en/posts/sup-court-graph/docker_compose_blog/</guid>
      <description>Deploying DataShare with Docker Compose Docker Compose is a powerful tool for defining and running multi-container Docker applications. In this blog post, we will walk through a Docker Compose script that sets up a comprehensive data sharing application stack, including DataShare, Elasticsearch, Redis, and PostgreSQL. This setup ensures seamless data management and sharing across different services.&#xA;Overview of Services The Docker Compose file defines the following services:&#xA;DataShare: A powerful data sharing platform.</description>
    </item>
    <item>
      <title>GCP Cloud Run: LOC Flattener</title>
      <link>jnapolitano.com/en/posts/loc_normalizer/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate><author>personal.jnapolitano@gmail.com (Justin Napolitano)</author>
      <guid>jnapolitano.com/en/posts/loc_normalizer/</guid>
      <description>Library of Congress Normalizer Job This repo normalizes the existing library of congress schema into a db that wil then be used to construct a knowledge graph of supreme court law.&#xA;Plan Setup a venv to run locally Install requirements Write out the script to interface with gcp Set up a docker container and test locally build the image upload to gcp create the job Setup the venv Install I installed virtualenv locally on ubuntu</description>
    </item>
    <item>
      <title>GCP Cloud Run Job Scraper</title>
      <link>jnapolitano.com/en/posts/l_o_c_scraper/</link>
      <pubDate>Sun, 28 Apr 2024 00:00:00 +0000</pubDate><author>personal.jnapolitano@gmail.com (Justin Napolitano)</author>
      <guid>jnapolitano.com/en/posts/l_o_c_scraper/</guid>
      <description>Library of Congress Scraper Job This repo scrapes the library of congress for all of the US Supreme Court Cases available on their platform. I intent to use this data to create a research tool to better understand the corpus of text.&#xA;Quick History of this project I had started work on this as an undergraduate at university, but the chatbot apis were not yet available.. and training modesl were far too expensive.</description>
    </item>
  </channel>
</rss>
