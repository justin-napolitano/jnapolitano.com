<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>project on Justin Napolitano</title>
    <link>jnapolitano.com/categories/project/</link>
    <description>Recent content in project on Justin Napolitano</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>jayburdindustries</copyright>
    <lastBuildDate>Sun, 22 May 2022 16:30:32 +0000</lastBuildDate><atom:link href="jnapolitano.com/categories/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Legal Research with AI Part 7: Wrangling Data with Julia</title>
      <link>jnapolitano.com/posts/legal-research-part-7/</link>
      <pubDate>Sun, 22 May 2022 16:30:32 +0000</pubDate>
      
      <guid>jnapolitano.com/posts/legal-research-part-7/</guid>
      <description>Intro In a previous post, I seperated all of the results returned from the Library of Congress API into individual JSON documents to be imported as nodes into a neo4j graph.
In this post, I filter the LOC data against another data set from Oyez that will be integrated in the next post.
Filtering Data Both data sets have been seperated into individual case nodes stored in the json format as a file with the format : .</description>
    </item>
    
  </channel>
</rss>
